{"version":3,"file":"static/js/739.f82bf0f9.chunk.js","mappings":"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","sources":["components/PageTitle/PageTitle.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { PropTypes } from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\n\nexport const PageTitle = ({ title }) => {\n  if (!title) return;\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n  );\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { singup } from 'redux/auth/operations';\n\nimport {\n  Stack,\n  Input,\n  Flex,\n  Button,\n  Text,\n  Box,\n  InputLeftElement,\n  InputRightElement,\n  InputGroup,\n  Heading,\n  FormLabel,\n} from '@chakra-ui/react';\n\nimport {\n  AiOutlineUser,\n  AiOutlineMail,\n  AiFillLock,\n  AiOutlineEye,\n  AiOutlineEyeInvisible,\n} from 'react-icons/ai';\n\nexport const RegisterForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = data => {\n    dispatch(singup(data));\n    reset();\n  };\n\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\n\n  return (\n    <Flex justify=\"center\" align=\"canter\">\n      <Flex\n        pos=\"relative\"\n        justify=\"center\"\n        align=\"canter\"\n        direction=\"column\"\n        w=\"400px\"\n      >\n        <Heading as=\"h1\" align=\"center\" fontWeight=\"700\" fontSize=\"24px\" mb={4}>\n          Sign up\n        </Heading>\n\n        <Stack as=\"form\" gap={1} onSubmit={handleSubmit(onSubmit)}>\n          <Box pos=\"relative\">\n            <FormLabel>\n              Username\n              <InputGroup mt={2}>\n                <Input\n                  {...register('name', {\n                    required: 'Username is required',\n                  })}\n                  type=\"text\"\n                  autoComplete=\" \"\n                />\n                <InputLeftElement\n                  pointerEvents=\"none\"\n                  children={<AiOutlineUser color=\"gray.300\" />}\n                />\n              </InputGroup>\n            </FormLabel>\n            <Box position=\"absolute\" top=\"90%\">\n              {errors?.name && (\n                <Text\n                  fontSize=\"xs\"\n                  color=\"#ff001b\"\n                  textShadow=\"rgb(0 0 0 / 25%) 0px 2px 2px\"\n                >\n                  {errors?.name?.message || 'Error'}\n                </Text>\n              )}\n            </Box>\n          </Box>\n          <Box pos=\"relative\">\n            <FormLabel>\n              Email\n              <InputGroup mt={2}>\n                <Input\n                  {...register('email', { required: 'Email is required' })}\n                  type=\"email\"\n                  autoComplete=\"email\"\n                />\n                <InputLeftElement\n                  pointerEvents=\"none\"\n                  children={<AiOutlineMail color=\"gray.300\" />}\n                />\n              </InputGroup>\n            </FormLabel>\n            <Box position=\"absolute\" top=\"90%\">\n              {errors?.email && (\n                <Text\n                  fontSize=\"xs\"\n                  color=\"#ff001b\"\n                  textShadow=\"rgb(0 0 0 / 25%) 0px 2px 2px\"\n                >\n                  {errors?.email?.message || 'Error'}\n                </Text>\n              )}\n            </Box>\n          </Box>\n          <Box pos=\"relative\">\n            <FormLabel>\n              Password\n              <InputGroup mt={2}>\n                <Input\n                  {...register('password', {\n                    required: 'Password is required',\n                    minLength: {\n                      value: 7,\n                      message: 'Min length is 7',\n                    },\n                  })}\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"current-password\"\n                />\n                <InputLeftElement\n                  pointerEvents=\"none\"\n                  children={<AiFillLock color=\"gray.300\" />}\n                />\n                <InputRightElement>\n                  <Button\n                    background=\"transparent\"\n                    p=\"0\"\n                    w=\"100%\"\n                    aria-label=\"Show hide password\"\n                    _hover={{ bg: 'transparent' }}\n                    _focus={{ bg: 'transparent' }}\n                    onClick={handlePasswordVisibility}\n                  >\n                    {showPassword ? (\n                      <AiOutlineEye />\n                    ) : (\n                      <AiOutlineEyeInvisible />\n                    )}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormLabel>\n            <Box pos=\"absolute\" top=\"90%\">\n              {errors?.password && (\n                <Text\n                  fontSize=\"xs\"\n                  color=\"#ff001b\"\n                  textShadow=\"rgb(0 0 0 / 25%) 0px 2px 2px\"\n                >\n                  {errors?.password?.message || 'Error'}\n                </Text>\n              )}\n            </Box>\n          </Box>\n          <Button type=\"submit\">Sign up</Button>\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n};\n","import { PageTitle } from 'components/PageTitle';\nimport { RegisterForm } from 'components/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <PageTitle title=\"Register\" />\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["PageTitle","title","RegisterForm","useState","showPassword","setShowPassword","dispatch","useDispatch","useForm","register","handleSubmit","reset","errors","formState","justify","align","pos","direction","w","as","fontWeight","fontSize","mb","gap","onSubmit","data","singup","mt","required","type","autoComplete","pointerEvents","children","color","position","top","name","textShadow","message","email","minLength","value","background","p","_hover","bg","_focus","onClick","password","Register"],"sourceRoot":""}