{"version":3,"file":"static/js/384.4153a544.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/FilterContacts/FilterContacts.styled.js","components/FilterContacts/FilterContacts.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilteredContacts = state => {\n    const contacts = selectContacts(state);\n    const filterValue = selectFilterValue(state);\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n    );\n};\n\n// export const selectShowModal = state => state.contact.showModal;","import styled from \"styled-components\";\n\nexport const ContactItem = styled.li`\n    padding: 4px 8px;\n`\n\nexport const ContactDeleteButton = styled.button`\n    margin-left: 8px;\n    padding: 4px 8px;\n\n    color: #000000;\n    background-color: #c3d0e3;\n\n    border-radius: 4px;\n    border: none;\n    box-shadow: 0 4px 10px #0000000d;\n    \n    transition: color 250ms linear, background-color 250ms linear;\n    :hover,\n    :focus {\n        color: #EDF3FC;\n        background-color: #6C8FC4;\n    }\n`","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { deleteContact, updateContact } from 'redux/contacts/operations';\nimport { ContactItem, ContactDeleteButton } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  return (\n    <ul>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactItem key={id}>\n          {name}: {number}\n          <ContactDeleteButton onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </ContactDeleteButton>\n          <ContactDeleteButton onClick={() => dispatch(updateContact(id))}>\n            Update\n          </ContactDeleteButton>\n        </ContactItem>\n      ))}\n    </ul>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const FilterWrap = styled.div`\n    display: grid;\n    grid-row-gap: 8px;\n    width: 200px;\n    margin-bottom: 16px;\n`","import { FilterWrap } from './FilterContacts.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilterValue } from 'redux/contacts/selectors';\nimport { setFilterValue } from 'redux/contacts/filterSlice';\n\nexport const FilterContacts = () => {\n  const filterValue = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    dispatch(setFilterValue(e.target.value));\n  };\n\n  return (\n    <FilterWrap>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input\n        id=\"filter\"\n        type=\"text\"\n        value={filterValue}\n        onChange={handleInputChange}\n      />\n    </FilterWrap>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const FormWrap = styled.form`\n    display: grid;\n    grid-row-gap: 8px;\n    width: 200px;\n    margin-bottom: 16px;\n`\n\nexport const FormButton = styled.button`\n    width: 120px;\n    margin-top: 4px;\n    padding: 4px 8px;\n\n    color: #000000;\n    background-color: #c3d0e3;\n\n    border-radius: 4px;\n    border: none;\n    box-shadow: 0 4px 10px #0000000d;\n    \n    transition: color 250ms linear, background-color 250ms linear;\n    :hover,\n    :focus {\n        color: #EDF3FC;\n        background-color: #6C8FC4;\n    }\n`","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { FormWrap, FormButton } from './ContactForm.styled';\nimport { useForm } from 'react-hook-form';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = data => {\n    const name = data.name;\n    const number = data.tel;\n    // console.log(name, number);\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  return (\n    <FormWrap onSubmit={handleSubmit(onSubmit)}>\n      <label htmlFor=\"text\">Name</label>\n      <input\n        {...register('name', {\n          required: 'Name is required field',\n          pattern: {\n            value: /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n            message:\n              'Name may contains only letters, apostrophe, dash and spaces.',\n          },\n        })}\n        type=\"text\"\n      />\n      <div>{errors?.name && <p>{errors?.name?.message || 'Error'}</p>}</div>\n      <label htmlFor=\"tel\">Number</label>\n      <input\n        {...register('tel', {\n          required: 'Number is required field',\n          pattern:\n            /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n          message:\n            'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n        })}\n        type=\"text\"\n      />\n      <div>{errors?.tel && <p>{errors?.tel?.message || 'Error'}</p>}</div>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </FormWrap>\n  );\n};\n\n// #1\n// pattern.value /regular expr/\n\n// name\n// \"Name may contains only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { FilterContacts } from 'components/FilterContacts';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>My Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <FilterContacts />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectIsLoading","state","contacts","isLoading","selectFilterValue","filter","selectFilteredContacts","items","selectContacts","normalizedFilter","toLowerCase","contact","name","includes","ContactItem","styled","ContactDeleteButton","ContactList","visibleContacts","useSelector","dispatch","useDispatch","map","id","number","onClick","deleteContact","updateContact","FilterWrap","FilterContacts","filterValue","htmlFor","type","value","onChange","e","setFilterValue","target","FormWrap","FormButton","ContactForm","useForm","register","handleSubmit","reset","errors","formState","onSubmit","data","tel","addContact","required","pattern","message","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}