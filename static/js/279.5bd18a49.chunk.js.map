{"version":3,"file":"static/js/279.5bd18a49.chunk.js","mappings":"uLAGaA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,GAAKA,EAEL,OACE,SAAC,KAAD,WACE,2BAAQA,KAGb,C,qLCaYC,EAAY,WAAO,IAAD,IAC7B,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAGjB,GAKIC,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAOf,OACE,SAAC,KAAD,CAAME,QAAQ,SAASC,MAAM,SAA7B,UACE,UAAC,KAAD,CACEC,IAAI,WACJF,QAAQ,SACRC,MAAM,SACNE,UAAU,SACVC,EAAE,QALJ,WAOE,SAAC,KAAD,CAAMC,GAAG,KAAKJ,MAAM,SAASK,WAAW,MAAMC,SAAS,OAAOC,GAAI,EAAlE,sBAIA,UAAC,KAAD,CAAOH,GAAG,OAAOI,IAAK,EAAGC,SAAUd,GAlBxB,SAAAe,GACfnB,GAASoB,EAAAA,EAAAA,IAAMD,IACfd,GACD,IAeK,WACE,UAAC,KAAD,CAAKK,IAAI,WAAT,WACE,SAAC,KAAD,CAAMG,GAAG,QAAQQ,QAAQ,QAAzB,oBAGA,UAAC,KAAD,CAAYC,GAAI,EAAhB,WACE,SAAC,MAAD,kBACMnB,EAAS,QAAS,CACpBoB,SAAU,uBAFd,IAIEC,GAAG,QACHC,KAAK,QACLC,aAAa,YAEf,SAAC,KAAD,CACEC,cAAc,OACdC,UAAU,SAAC,MAAD,CAAeC,MAAM,mBAGnC,SAAC,KAAD,CAAKC,SAAS,WAAd,UACS,OAANxB,QAAM,IAANA,OAAA,EAAAA,EAAQyB,SACP,SAAC,KAAD,CACEhB,SAAS,KACTc,MAAM,UACNG,WAAW,+BAHb,UAKS,OAAN1B,QAAM,IAANA,GAAA,UAAAA,EAAQyB,aAAR,eAAeE,UAAW,gBAKnC,UAAC,KAAD,CAAKvB,IAAI,WAAT,WACE,SAAC,KAAD,CAAMG,GAAG,QAAQQ,QAAQ,WAAzB,uBAGA,UAAC,KAAD,CAAYC,GAAI,EAAhB,WACE,SAAC,MAAD,kBACMnB,EAAS,WAAY,CACvBoB,SAAU,uBACVW,UAAW,CACTC,MAAO,EACPF,QAAS,sBALf,IAQET,GAAG,WACHC,KAAM3B,EAAe,OAAS,WAC9B4B,aAAa,uBAEf,SAAC,KAAD,CACEC,cAAc,OACdC,UAAU,SAAC,MAAD,CAAYC,MAAM,gBAE9B,SAAC,KAAD,WACE,SAAC,KAAD,CACEO,WAAW,cACXC,EAAE,IACFzB,EAAE,OACF,aAAW,qBACX0B,OAAQ,CAAEC,GAAI,eACdC,OAAQ,CAAED,GAAI,eACdE,QAtFiB,kBAAM1C,GAAiBD,EAAvB,EA+EnB,SASGA,GAAe,SAAC,MAAD,KAAmB,SAAC,MAAD,YAIzC,SAAC,KAAD,CAAKY,IAAI,WAAT,UACS,OAANJ,QAAM,IAANA,OAAA,EAAAA,EAAQoC,YACP,SAAC,KAAD,CACE3B,SAAS,KACTc,MAAM,UACNG,WAAW,+BAHb,UAKS,OAAN1B,QAAM,IAANA,GAAA,UAAAA,EAAQoC,gBAAR,eAAkBT,UAAW,gBAKtC,SAAC,KAAD,CAAQR,KAAK,SAAb,4BAKT,E,UCtIc,SAASkB,IACtB,OACE,iCACE,SAACjD,EAAA,EAAD,CAAWC,MAAM,WACjB,SAACC,EAAD,MAGL,C","sources":["components/PageTitle/PageTitle.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import { PropTypes } from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\n\nexport const PageTitle = ({ title }) => {\n  if (!title) return;\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n  );\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { logIn } from 'redux/auth/operations';\n\nimport {\n  Stack,\n  Input,\n  Flex,\n  Button,\n  Text,\n  Box,\n  InputLeftElement,\n  InputGroup,\n  InputRightElement,\n} from '@chakra-ui/react';\n\nimport {\n  AiOutlineMail,\n  AiFillLock,\n  AiOutlineEye,\n  AiOutlineEyeInvisible,\n} from 'react-icons/ai';\n\nexport const LoginForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const dispatch = useDispatch();\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = data => {\n    dispatch(logIn(data));\n    reset();\n  };\n\n  return (\n    <Flex justify=\"center\" align=\"canter\">\n      <Flex\n        pos=\"relative\"\n        justify=\"center\"\n        align=\"canter\"\n        direction=\"column\"\n        w=\"400px\"\n      >\n        <Text as=\"h1\" align=\"center\" fontWeight=\"700\" fontSize=\"24px\" mb={4}>\n          Sign in\n        </Text>\n\n        <Stack as=\"form\" gap={3} onSubmit={handleSubmit(onSubmit)}>\n          <Box pos=\"relative\">\n            <Text as=\"label\" htmlFor=\"email\">\n              Email\n            </Text>\n            <InputGroup mt={2}>\n              <Input\n                {...register('email', {\n                  required: 'Email is required',\n                })}\n                id=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n              />\n              <InputLeftElement\n                pointerEvents=\"none\"\n                children={<AiOutlineMail color=\"gray.300\" />}\n              />\n            </InputGroup>\n            <Box position=\"absolute\">\n              {errors?.email && (\n                <Text\n                  fontSize=\"xs\"\n                  color=\"#ff001b\"\n                  textShadow=\"rgb(0 0 0 / 25%) 0px 2px 2px\"\n                >\n                  {errors?.email?.message || 'Error'}\n                </Text>\n              )}\n            </Box>\n          </Box>\n          <Box pos=\"relative\">\n            <Text as=\"label\" htmlFor=\"password\">\n              Password\n            </Text>\n            <InputGroup mt={2}>\n              <Input\n                {...register('password', {\n                  required: 'Password is required',\n                  minLength: {\n                    value: 7,\n                    message: 'Min length is 7',\n                  },\n                })}\n                id=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                autoComplete=\"current-password\"\n              />\n              <InputLeftElement\n                pointerEvents=\"none\"\n                children={<AiFillLock color=\"gray.300\" />}\n              />\n              <InputRightElement>\n                <Button\n                  background=\"transparent\"\n                  p=\"0\"\n                  w=\"100%\"\n                  aria-label=\"Show hide password\"\n                  _hover={{ bg: 'transparent' }}\n                  _focus={{ bg: 'transparent' }}\n                  onClick={handlePasswordVisibility}\n                >\n                  {showPassword ? <AiOutlineEye /> : <AiOutlineEyeInvisible />}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n            <Box pos=\"absolute\">\n              {errors?.password && (\n                <Text\n                  fontSize=\"xs\"\n                  color=\"#ff001b\"\n                  textShadow=\"rgb(0 0 0 / 25%) 0px 2px 2px\"\n                >\n                  {errors?.password?.message || 'Error'}\n                </Text>\n              )}\n            </Box>\n          </Box>\n          <Button type=\"submit\">Sign In</Button>\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n};\n","import { LoginForm } from 'components/LoginForm';\nimport { PageTitle } from 'components/PageTitle';\n\nexport default function Login() {\n  return (\n    <>\n      <PageTitle title=\"Login\" />\n      <LoginForm />\n    </>\n  );\n}\n"],"names":["PageTitle","title","LoginForm","useState","showPassword","setShowPassword","dispatch","useDispatch","useForm","register","handleSubmit","reset","errors","formState","justify","align","pos","direction","w","as","fontWeight","fontSize","mb","gap","onSubmit","data","logIn","htmlFor","mt","required","id","type","autoComplete","pointerEvents","children","color","position","email","textShadow","message","minLength","value","background","p","_hover","bg","_focus","onClick","password","Login"],"sourceRoot":""}