{"version":3,"file":"static/js/4.df19c15a.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { singup } from 'redux/auth/operations';\n\nimport {\n  Stack,\n  Input,\n  Flex,\n  Button,\n  Text,\n  Box,\n  InputLeftElement,\n  InputRightElement,\n  InputGroup,\n  Heading,\n  FormControl,\n  FormLabel,\n} from '@chakra-ui/react';\n\nimport {\n  AiOutlineUser,\n  AiOutlineMail,\n  AiFillLock,\n  AiOutlineEye,\n  AiOutlineEyeInvisible,\n} from 'react-icons/ai';\n\nexport const RegisterForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = data => {\n    dispatch(singup(data));\n    reset();\n  };\n\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\n\n  return (\n    <Flex justify=\"center\" align=\"canter\">\n      <Flex\n        pos=\"relative\"\n        justify=\"center\"\n        align=\"canter\"\n        direction=\"column\"\n        w=\"400px\"\n      >\n        <Heading as=\"h1\" align=\"center\" fontWeight=\"700\" fontSize=\"24px\" mb={4}>\n          Sign up\n        </Heading>\n\n        <Stack as=\"form\" gap={3} onSubmit={handleSubmit(onSubmit)}>\n          <FormControl pos=\"relative\">\n            <FormLabel mb={2}>Username</FormLabel>\n            <InputGroup>\n              <Input\n                {...register('name', {\n                  required: 'Username is required',\n                })}\n                type=\"text\"\n              />\n              <InputLeftElement\n                pointerEvents=\"none\"\n                children={<AiOutlineUser color=\"gray.300\" />}\n              />\n            </InputGroup>\n            <Box position=\"absolute\">\n              {errors?.name && (\n                <Text\n                  fontSize=\"xs\"\n                  color=\"#ff001b\"\n                  textShadow=\"rgb(0 0 0 / 25%) 0px 2px 2px\"\n                >\n                  {errors?.name?.message || 'Error'}\n                </Text>\n              )}\n            </Box>\n          </FormControl>\n          <FormControl pos=\"relative\">\n            <FormLabel mb={2}>Email</FormLabel>\n            <InputGroup>\n              <Input\n                {...register('email', { required: 'Email is required' })}\n                type=\"email\"\n              />\n              <InputLeftElement\n                pointerEvents=\"none\"\n                children={<AiOutlineMail color=\"gray.300\" />}\n              />\n            </InputGroup>\n            <Box position=\"absolute\">\n              {errors?.email && (\n                <Text\n                  fontSize=\"xs\"\n                  color=\"#ff001b\"\n                  textShadow=\"rgb(0 0 0 / 25%) 0px 2px 2px\"\n                >\n                  {errors?.email?.message || 'Error'}\n                </Text>\n              )}\n            </Box>\n          </FormControl>\n          <FormControl pos=\"relative\">\n            <FormLabel mb={2}>Password</FormLabel>\n            <InputGroup>\n              <Input\n                {...register('password', {\n                  required: 'Password is required',\n                  minLength: {\n                    value: 7,\n                    message: 'Min length is 7',\n                  },\n                })}\n                type={showPassword ? 'text' : 'password'}\n              />\n              <InputLeftElement\n                pointerEvents=\"none\"\n                children={<AiFillLock color=\"gray.300\" />}\n              />\n              <InputRightElement>\n                <Button\n                  background=\"transparent\"\n                  p=\"0\"\n                  w=\"100%\"\n                  aria-label=\"Show hide password\"\n                  _hover={{ bg: 'transparent' }}\n                  _focus={{ bg: 'transparent' }}\n                  onClick={handlePasswordVisibility}\n                >\n                  {showPassword ? <AiOutlineEye /> : <AiOutlineEyeInvisible />}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n            <Box pos=\"absolute\">\n              {errors?.password && (\n                <Text\n                  fontSize=\"xs\"\n                  color=\"#ff001b\"\n                  textShadow=\"rgb(0 0 0 / 25%) 0px 2px 2px\"\n                >\n                  {errors?.password?.message || 'Error'}\n                </Text>\n              )}\n            </Box>\n          </FormControl>\n          <Button type=\"submit\">Sign up</Button>\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n};\n\n// 400 Bad Request //handle already exist\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["RegisterForm","useState","showPassword","setShowPassword","dispatch","useDispatch","useForm","register","handleSubmit","reset","errors","formState","justify","align","pos","direction","w","as","fontWeight","fontSize","mb","gap","onSubmit","data","singup","required","type","pointerEvents","children","color","position","name","textShadow","message","email","minLength","value","background","p","_hover","bg","_focus","onClick","password","Register","Helmet"],"sourceRoot":""}